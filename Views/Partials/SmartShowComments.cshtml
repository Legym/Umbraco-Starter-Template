@inherits Umbraco.Web.Mvc.UmbracoViewPage<SmartBlog.Comment>
@using System.Web.Mvc.Html;
@using Umbraco.Web;
@{
    // Client validation enabled
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;

    // Master blog settings
    Boolean blnMasterDisableComments = Boolean.Parse(SmartBlogLibraries.Global.GetConfig().GetElementsByTagName("masterDisableComments")[0].InnerText);
    Boolean blnDisableFacebookIntegration = Boolean.Parse(SmartBlogLibraries.Global.GetConfig().GetElementsByTagName("disableFacebookIntegration")[0].InnerText);

    // Get the current page
    IPublishedContent objModel = Umbraco.TypedContent(UmbracoContext.Current.PageId);

    // Tells the controller what page to add a comment under.
    Model.intId = objModel.Id;

    // Comments
    IEnumerable<IPublishedContent> colComments = objModel.Descendants("SmartBlogComment");

    // If comments have not been disabled then don't show them
    if (!blnMasterDisableComments
        && objModel.GetPropertyValue<Boolean>("disableComments") != true
        && objModel.AncestorOrSelf("SmartBlogBlog").GetPropertyValue<Boolean>("disableGlobalComments") != true)
    {
        

        // Div for comments to be loaded into
        <div id="commentsContainer">
            <h3>Comments</h3>

            @foreach (IPublishedContent objComment in colComments)
            {

                    <div class="comment-wrap">
                        <div class="photo">
                            <div class="avatar" style="background-image: url('/graphics/no-avatar.png')"></div>
                        </div>

                        <div class="comment-block">
                            <ul class="comment-actions">
                                <li>
                                    <span>@objComment.GetPropertyValue("smartBlogName")</span>
                                </li>
                                <li class="comment-date">@objComment.CreateDate.ToString("MMM dd yyyy")</li>
                            </ul>
                            <p class="comment-text">
                                @objComment.GetPropertyValue("smartBlogComment1")
                            </p>
                        </div>
                    </div>


                @*<div class="comment" id="c-@objComment.Id">
                    <div class="commentInner">
                        <div class="commentName">@objComment.GetPropertyValue("smartBlogName")</div>
                        <div class="commentComment">@objComment.GetPropertyValue("smartBlogComment1")</div>
                        <div class="commentDate">@objComment.CreateDate</div>
                    </div>
                </div>*@
            }
        </div>

        <br />
        <h3>Post a comment</h3>

        // Render comment form
        using (Html.BeginUmbracoForm("SubmitComment", "SmartSurface", null, new Dictionary<String, Object> { { "id", "commentForm" } }))
        {
            @Html.ValidationSummary(false, "Please correct the following:");


            <div>
                <div class="row">
                    <div class="large-12 columns">
                        <label>
                            @Html.TextBoxFor(x => x.strName, new Dictionary<String, Object> { { "placeholder", "Name" } })
                        </label>
                    </div>
                </div>

                <div class="row">
                    <div class="large-6 columns">
                        <label>
                            @Html.TextBoxFor(x => x.strEmail, new Dictionary<String, Object> { { "placeholder", "Email" } })
                        </label>
                    </div>
                    <div class="large-6 columns">
                        <label>
                            @Html.TextBoxFor(x => x.strWebsite, new Dictionary<String, Object> { { "placeholder", "Website" } })
                        </label>
                    </div>
                </div>

                <div class="row">
                    <div class="large-12 columns">
                        <label>
                            @Html.TextAreaFor(x => x.strComment, new Dictionary<String, Object> { { "placeholder", "Your Comment" } })
                        </label>
                    </div>
                </div>

                <div class="row">
                    <div class="large-12 columns">
                        @Html.TextBoxFor(x => x.strSecurity, new Dictionary<String, Object> { { "placeholder", "Security Question: What is 2 + 2?" } })
                    </div>

                    <div class="large-12 columns">
                        @Html.HiddenFor(x => x.intId)
                        <input type="submit" name="Submit" value="Submit" id="submitButton" class="btn btn-inverse" />
                    </div>
                </div>

            </div>
        }
    }
}